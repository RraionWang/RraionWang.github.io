{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":""},{"location":"tags/","title":"\u5206\u7c7b","text":""},{"location":"tags/#r","title":"R","text":"<ul> <li>R\u200b\u5b9e\u6218\u200b\uff1a\u200b\u6587\u4ef6\u200b\u8fc7\u6ee4\u200b</li> </ul>"},{"location":"tags/#powershell","title":"powershell","text":"<ul> <li>Powershell_\u200b\u57fa\u7840\u200b</li> <li>Powershell_\u200b\u6587\u4ef6\u200b\u5904\u7406\u200b</li> </ul>"},{"location":"tags/#_1","title":"\u4e2a\u4eba\u200b\u5efa\u200b\u7ad9","text":"<ul> <li>\u200b\u4f7f\u7528\u200bmkdocs\u200b\u6784\u5efa\u200b\u535a\u5ba2\u200b\u548c\u200b\u4e2a\u4eba\u200b\u7ad9\u70b9\u200b</li> </ul>"},{"location":"about/about/","title":"\u5173\u4e8e\u200b\u4f5c\u8005","text":"<p>Rraion\uff0c\u200b\u5b89\u5fbd\u200b\u4eba\u200b\u3002\u200b\u672c\u79d1\u6bd5\u4e1a\u200b\u4e8e\u200b\u91cd\u5e86\u200b\u7406\u5de5\u5927\u5b66\u200b\uff0c\u200b\u7535\u5b50\u200b\u4fe1\u606f\u5de5\u7a0b\u200b\u4e13\u4e1a\u200b\uff0c\u200b\u6c5f\u6e56\u4eba\u79f0\u200b\u3010\u200b\u72ee\u5b50\u200b/\u200b\u897f\u51e0\u200b/\u200b\u677e\u677e\u200b\u3011\uff0c\u200b\u73b0\u957f\u200b\u9a7b\u200b\u6df1\u5733\u200b\u3002</p>"},{"location":"about/about/#_2","title":"\u6709\u8da3\u200b\u7684\u200b\u8eab\u4efd","text":"<ol> <li>\u200b\u6df1\u5733\u200b\u5934\u200b\u9a6c\u200b\u4ff1\u4e50\u90e8\u200b\uff08SHIP\uff09\u200b\u4f1a\u5458\u200b</li> <li>\u200b\u6df1\u5733\u5e02\u200b\u7f57\u6e56\u533a\u200b\u5915\u989c\u200b\uff08\u200b\u7231\u200b\u540c\u884c\u200b\uff09\u200b\u5fd7\u613f\u8005\u200b</li> </ol>"},{"location":"about/about/#_3","title":"\u6709\u8da3\u200b\u7684\u200b\u7ecf\u5386","text":"<ol> <li>\u3010\u200b\u56db\u5e74\u7ea7\u200b\u3011\u200b\u4e3a\u4e86\u200b\u63a2\u7a76\u200b\u6709\u673a\u7269\u200b\u4e92\u6eb6\u200b\uff0c\u200b\u7528\u200b\u6cb9\u6f06\u200b\u7a00\u6599\u200b\u6eb6\u89e3\u200b\u6ce1\u6cab\u5851\u6599\u200b\u7ed3\u679c\u200b\u4e0d\u200b\u5c0f\u5fc3\u200b\u628a\u200b\u7a00\u6599\u200b\u6d12\u200b\u5728\u200b\u4e86\u200b\u684c\u5b50\u200b\u4e0a\u200b\uff0c\u200b\u7ed3\u679c\u200b\u78b0\u5230\u200b\u4e86\u200b\u9152\u7cbe\u706f\u200b\u70e7\u200b\u4e86\u200b\u8d77\u6765\u200b\uff0c\u200b\u90a3\u200b\u65f6\u5019\u200b\u6211\u200b\u8fd8\u200b\u6ca1\u5b66\u200b\u521d\u4e2d\u200b\u7269\u7406\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7528\u6c34\u200b\u706d\u706b\u200b\uff0c\u200b\u7ed3\u679c\u200b\u706b\u200b\u8d8a\u6765\u8d8a\u200b\u5927\u200b\uff0c\u200b\u8fd8\u597d\u200b\u6211\u200b\u8db3\u591f\u200b\u806a\u660e\u200b\u7528\u200b\u5e8a\u5355\u200b\u6cbe\u6c34\u200b\u6251\u706d\u200b\u4e86\u200b\u3002</li> <li>\u3010\u200b\u516d\u5e74\u7ea7\u200b\u3011\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5e02\u200b\u7535\u200b\uff08220V\uff09\u200b\u70b9\u4eae\u200b\u767d\u70bd\u706f\u200b\uff0c\u200b\u6ca1\u6709\u200b\u7edd\u7f18\u80f6\u5e26\u200b\uff0c\u200b\u6240\u4ee5\u200b\u76f4\u63a5\u200b\u7528\u624b\u200b\u6309\u4f4f\u200b\uff0c\u200b\u7136\u540e\u200b\u62db\u81f4\u200b\u6574\u680b\u200b\u697c\u200b\u505c\u7535\u200b\uff0c\u200b\u6211\u200b\u81ea\u5df1\u200b\u7adf\u7136\u200b\u6ca1\u200b\u88ab\u200b\u7535\u6b7b\u200b\uff0c\u200b\u771f\u662f\u200b\u5341\u5206\u200b\u5f00\u5fc3\u200b\u3002</li> <li>\u3010\u200b\u521d\u4e8c\u200b\u3011\u200b\u4f7f\u7528\u200b\u805a\u6c2f\u4e59\u70ef\u200b\u80f6\u6c34\u200b\u5236\u53d6\u200b\u76d0\u9178\u200b\uff0c\u200b\u7ed3\u679c\u200b\u6536\u96c6\u200bHCl\u200b\u7684\u200b\u65f6\u5019\u200b\u8bd5\u7ba1\u200b\u5012\u5438\u200b\u7206\u70b8\u200b\uff0cHCl\u200b\u6269\u6563\u200b\u5230\u200b\u6574\u4e2a\u200b\u623f\u95f4\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u6211\u200b\u6253\u5f00\u200b\u7a97\u6237\u200b\u900f\u6c14\u200b\uff0c\u200b\u91cd\u65b0\u200b\u6536\u96c6\u200b\uff0c\u200b\u7ed3\u679c\u200b\u628a\u200b\u5bb6\u91cc\u200b\u76c6\u683d\u200b\u91cc\u200b\u7684\u200b\u77f3\u5934\u200b\u505a\u200b\u5b9e\u9a8c\u200b\u53d1\u73b0\u200b\u771f\u7684\u200b\u53ef\u4ee5\u200b\u8150\u8680\u200b\uff0c\u200b\u975e\u5e38\u200b\u6fc0\u52a8\u200b\u3002</li> <li>\u3010\u200b\u5927\u4e8c\u200b\u3011\u200b\u5728\u200b\u83cf\u6cfd\u200b\u65c5\u6e38\u200b\uff0c\u200b\u7a81\u53d1\u5947\u60f3\u200b\u60f3\u200b\u770b\u200b\u9ec4\u6cb3\u200b\uff0c\u200b\u5750\u200b\u516c\u4ea4\u8f66\u200b\u5230\u200b\u4e86\u200b\u83cf\u6cfd\u200b\u79bb\u200b\u9ec4\u6cb3\u200b\u6700\u8fd1\u200b\u7684\u200b\u4e00\u4e2a\u200b\u9547\u5b50\u200b\uff0c\u200b\u5f92\u6b65\u8d70\u200b\u5230\u200b\u4e86\u200b\u6cb3\u5357\u200b\u770b\u200b\u9ec4\u6cb3\u200b\uff0c\u200b\u770b\u200b\u5b8c\u200b\u4e4b\u540e\u200b\uff0c\u200b\u53d1\u73b0\u200b\u8def\u4e0a\u200b\u6ca1\u6709\u200b\u516c\u4ea4\u8f66\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u7530\u200b\uff0c\u200b\u8d70\u200b\u4e86\u200b\u516b\u5c0f\u65f6\u200b\u7ec8\u4e8e\u200b\u8d70\u5230\u200b\u4e86\u200b\u6fee\u9633\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5c0f\u9547\u200b\uff0c\u200b\u907f\u514d\u200b\u4e86\u200b\u7761\u200b\u5927\u8857\u200b\u7684\u200b\u5384\u8fd0\u200b\u3002</li> </ol> <p>...\u200b\u672a\u5b8c\u5f85\u7eed\u200b</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/07/20/%E4%BD%BF%E7%94%A8mkdocs%E6%9E%84%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%92%8C%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/","title":"\u4f7f\u7528\u200bmkdocs\u200b\u6784\u5efa\u200b\u535a\u5ba2\u200b\u548c\u200b\u4e2a\u4eba\u200b\u7ad9\u70b9","text":"<p>\u200b\u76f8\u4fe1\u200b\u6bcf\u4e2a\u200b\u5c0f\u4f19\u4f34\u200b\u90fd\u200b\u4f1a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5efa\u7acb\u200b\u81ea\u5df1\u200b\u7f51\u7ad9\u200b\u7684\u200b\u5c0f\u5c0f\u200b\u613f\u671b\u200b\u5427\u200b</p> <p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u6d4b\u8bd5\u200b\u5185\u5bb9\u200b</p>","tags":["\u4e2a\u4eba\u5efa\u7ad9"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/","title":"Powershell_\u200b\u57fa\u7840","text":"","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#_1","title":"\u8bfb\u5199","text":"","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#1","title":"1. \u200b\u5199","text":"<pre><code>Write-Host \"contents\"\n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#2","title":"2. \u200b\u8bfb","text":"<ol> <li>\u200b\u666e\u901a\u200b\u8bfb\u200b\uff1a\u200b\u6b64\u65f6\u200bhint\u200b\u5c06\u200b\u4f5c\u4e3a\u200b\u63d0\u793a\u200b\u8bcd\u200b\uff0c\u200b\u8f93\u5165\u200b\u5185\u5bb9\u200b\u5e76\u200b\u56de\u8f66\u200b\uff0c\u200b\u5185\u5bb9\u200b\u5c06\u4f1a\u200b\u5b58\u50a8\u200b\u5230\u200b<code>input</code>\u200b\u53d8\u91cf\u200b\u4e2d\u200b</li> </ol> <pre><code>$input=Read-Host \"hint\"\n</code></pre> <ol> <li>\u200b\u5e26\u6709\u200b\u7c7b\u578b\u200b\u7684\u200b\u8bfb\u200b\uff1a\u200b\u8bfb\u53d6\u200b\u4e00\u4e2a\u200b16\u200b\u8fdb\u5236\u200b\u6574\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bGetType()\u200b\u65b9\u6cd5\u200b\u6765\u200b\u8bfb\u53d6\u200b\u7c7b\u578b\u200b</li> </ol> <pre><code>$hexNum = [int](\"0x\" + (Read-Host \"input a integer\"))\nWrite-Host $hexNum.GetType()\n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#_2","title":"\u6587\u4ef6\u200b\u548c\u200b\u6587\u4ef6\u5939\u200b\u64cd\u4f5c","text":"<ol> <li>\u200b\u8bfb\u53d6\u200b\u548c\u200b\u521b\u5efa\u200b\u6587\u4ef6\u5939\u200b \u200b\u5982\u679c\u200bdata\u200b\u6587\u4ef6\u5939\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0c\u200b\u5c06\u4f1a\u200b\u81ea\u52a8\u200b\u521b\u5efa\u200b</li> </ol> <pre><code>$outputFile = \"C:\\\\Users\\\\Desktop\\\\data\\\\\"\n$outputDir = [System.IO.Path]::GetDirectoryName($outputFile)\nif (-not (Test-Path $outputDir)) {\n   New-Item -Path $outputDir -ItemType Directory | Out-Null \n   }\n</code></pre> <ol> <li>\u200b\u6e05\u7a7a\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b \u200b\u6e05\u7a7a\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff0c\u200b\u4e14\u200b\u4e0d\u200b\u8f93\u51fa\u200b\u9519\u8bef\u4fe1\u606f\u200b</li> </ol> <pre><code>Clear-Content $outputFile -ErrorAction SilentlyContinue\n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#_3","title":"\u7c7b\u578b\u8f6c\u6362","text":"<ol> <li>\u200b\u5341\u516d\u8fdb\u5236\u200b\u6570\u5b57\u200b\u8f6c\u5316\u200b\u4e3a\u200b10\u200b\u8fdb\u5236\u200b\u6570\u5b57\u200b,\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b<code>$startAddress = 0x11</code>\u200b\u5c06\u200b\u5f97\u5230\u200b\u9519\u8bef\u200b\u8f93\u51fa\u200b\uff0c\u200b\u539f\u56e0\u200b\u6211\u200b\u6682\u65f6\u200b\u4e0d\u200b\u77e5\u9053\u200b</li> </ol> <pre><code>$startAddress = \"0x11\"\n$currentAddress = [convert]::ToInt32($startAddress, 16)\nWrite-Host \"$currentAddress\" \n</code></pre> <ol> <li>\u200b\u7c7b\u578b\u8f6c\u6362\u200b \u200b\u770b\u200b\u4e0b\u9762\u200b\u4e24\u4e2a\u200b\u4f8b\u5b50\u200b</li> </ol> <pre><code># \u200b\u8f93\u51fa\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\"1312\",\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u62fc\u63a5\u200b\n$res = \"13\" + [convert]::ToString(12)\nWrite-Host   $res\n\n# \u200b\u8f93\u51fa\u200b\u4e3a\u200b\u6574\u6570\u200b25,\u200b\u540e\u9762\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u4e3a\u200b\u6574\u5f62\u200b\n$res = 13 + [convert]::ToString(12)\nWrite-Host   $res\n\n# \u200b\u8f93\u51fa\u200b\u4e3a\u200b\u6574\u6570\u200b25,\u200b\u540e\u9762\u200b\u7684\u200b\u6574\u5f62\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\n$res = [convert]::ToString(12) + 13\nWrite-Host   $res\n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#_4","title":"\u6570\u5b66\u200b\u51fd\u6570","text":"<ol> <li>\u200b\u6700\u5927\u200b\u6700\u5c0f\u503c\u200b \u200b\u8f93\u51fa\u200b12,13</li> </ol> <pre><code>$min = [Math]::Min(12, 13)\n$max = [Math]::Max(12, 13)\nWrite-Host \"$min&amp;$max\"\n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E5%9F%BA%E7%A1%80/#_5","title":"\u6307\u4ee4\u200b\u6267\u884c\u200b\u7ed3\u679c\u200b\u5b58\u50a8\u200b\u5230\u200b\u5b57\u7b26\u4e32","text":"<pre><code>$data = Invoke-Expression \"ipconfig\"\nWrite-Host $data \n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/","title":"Powershell_\u200b\u6587\u4ef6\u200b\u5904\u7406","text":"","tags":["powershell"]},{"location":"powershell/ps1_%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1","title":"1. \u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u5185\u5bb9","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u5bf9\u200b\u6587\u4ef6\u200b\u6309\u7167\u200b\u6307\u5b9a\u200b\u7f16\u7801\u200b\u8fdb\u884c\u200b\u8bfb\u53d6\u200b</p> <pre><code>$data = Get-Content \"\\path\\to\\your\\file.txt\" -Encoding UTF8\nWrite-Host $data \n</code></pre>","tags":["powershell"]},{"location":"powershell/ps1_%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2","title":"2. \u200b\u4f7f\u7528\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u8fc7\u6ee4\u200b\u6587\u4ef6\u200b\u5185\u5bb9","text":"<p>\u200b\u6bd4\u5982\u200b\u5982\u4e0b\u200b\u6587\u672c\u200b</p> <pre><code>Time 2009.09.03\nlorem \nTime 2009.09.04\nlorem1\nTime 2009.09.05\nlorem2\n</code></pre> <p>\u200b\u5982\u679c\u200b\u5e0c\u671b\u200b\u8fc7\u6ee4\u200b\u6389\u200b\u542b\u6709\u200b\"Time\"\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u65b9\u6cd5\u200b\uff0c</p> <pre><code>$sourcePath = \"path\\to\\your\\file.txt\"\nGet-Content $sourcePath | Where-Object { $_ -notmatch 'Time' } | Write-Output\n</code></pre> <p>\u200b\u5f53\u7136\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u7684\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u3002</p>","tags":["powershell"]},{"location":"powershell/ps1_%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3","title":"3. \u200b\u5904\u7406\u200b\u6709\u200b\u7279\u5b9a\u200b\u5206\u9694\u7b26\u200b\u7684\u200b\u6587\u4ef6","text":"<p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200btxt\u200b\u6587\u4ef6\u200b\u6709\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b</p> <pre><code>12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 \n89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89 \n12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 13 13 12 \n89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89 23 99 89\n</code></pre> <p>\u200b\u5e0c\u671b\u200b\u5c06\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\u8f6c\u4e3a\u200bcsv\u200b\u683c\u5f0f\u200b(\u200b\u5217\u6570\u200b\u4e3a\u200b10)\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u5982\u4e0b\u200b\u64cd\u4f5c\u200b</p> <pre><code>## \u200b\u6307\u5b9a\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\n$outputFile = \"C:\\Users\\17347\\Desktop\\ps1\\a.txt\"\n\n## \u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u6570\u636e\u200b\n$data = Get-Content $outputFile\n\n## \u200b\u521d\u59cb\u5316\u200b\u884c\u200b\u6570\u636e\u200b\u6570\u7ec4\u200b\n$lineData = @()\n\n## \u200b\u904d\u5386\u200b\u6bcf\u200b\u4e00\u884c\u200b\u6570\u636e\u200b\nforeach ($line in $data) {\n    ## \u200b\u5206\u5272\u200b\u884c\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u57fa\u4e8e\u200b\u7a7a\u683c\u200b\n    $values = $line.Trim() -split '\\s+'\n\n    ## \u200b\u521d\u59cb\u5316\u200b\u4e34\u65f6\u200b\u884c\u200b\u53d8\u91cf\u200b\n    $row = \"\"\n\n    ## \u200b\u904d\u5386\u200b\u6bcf\u4e2a\u200b\u503c\u200b\n    foreach ($value in $values) {\n        ## \u200b\u6dfb\u52a0\u200b\u503c\u5230\u200b\u4e34\u65f6\u200b\u884c\u200b\uff0c\u200b\u9017\u53f7\u200b\u5206\u9694\u200b\n        $row += $value + \",\"\n\n        ## \u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u5df2\u200b\u8fbe\u5230\u200b5\u200b\u4e2a\u503c\u200b\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\uff0c\u200b\u5219\u200b\u5b8c\u6210\u200b\u4e00\u884c\u200b\n        if (($row -split ',').Count -eq 6) {  ## \u200b\u5206\u5272\u200b\u540e\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e2d\u4f1a\u200b\u591a\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u5143\u7d20\u200b\n            $lineData += $row.TrimEnd(',')   ## \u200b\u79fb\u9664\u200b\u672b\u5c3e\u200b\u7684\u200b\u9017\u53f7\u200b\n            $row = \"\"                         ## \u200b\u91cd\u7f6e\u200b\u4e34\u65f6\u200b\u884c\u200b\n        }\n    }\n}\n\n## \u200b\u68c0\u67e5\u200b\u6700\u540e\u200b\u4e00\u7ec4\u200b\u6570\u636e\u200b\uff0c\u200b\u662f\u5426\u200b\u6709\u200b\u4e0d\u8db3\u200b5\u200b\u4e2a\u503c\u200b\u7684\u200b\u884c\u200b\nif ($row.Length -gt 0) {\n    $lineData += $row.TrimEnd(',')\n}\n\n## \u200b\u5bfc\u51fa\u200b\u5230\u200bCSV\u200b\u6587\u4ef6\u200b\n$lineData | Out-File \"C:\\Users\\17347\\Desktop\\ps1\\d.csv\"\n</code></pre>","tags":["powershell"]},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/demands/","title":"\u9879\u76ee\u200b\u9700\u6c42","text":"<ol> <li>\u200b\u624b\u673a\u200b\u5b9e\u65f6\u200b\u4f20\u8f93\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6682\u65f6\u200b\u4ee5\u200b\u6570\u5b57\u200b\u5faa\u73af\u200b\u4e3a\u4f8b\u200b</li> <li>\u200b\u7535\u8111\u200b\u7aef\u200b\u4f7f\u7528\u200bcpp\u200b\u4ee3\u7801\u200b\u8fdb\u884c\u200b\u5b9e\u65f6\u200b\u63a5\u6536\u200b</li> <li>\u200b\u5bf9\u200b\u6570\u636e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u89e3\u6790\u200b\u5b58\u50a8\u200b\u5230\u200b\u6570\u636e\u5e93\u200b</li> <li>\u200b\u591a\u79cd\u200b\u65b9\u5f0f\u200b\u4ece\u200b\u6570\u636e\u5e93\u200b\u8bfb\u53d6\u6570\u636e\u200b</li> <li>\u200b\u5b9e\u65f6\u200b\u63a5\u6536\u200b\u7684\u200b\u540c\u65f6\u200b\u5c06\u200b\u4fe1\u606f\u200b\u4fdd\u5b58\u200b\u5230\u200b\u6570\u636e\u5e93\u200b\u91cc\u200b</li> <li>\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u6570\u636e\u5e93\u200b\u5143\u7d20\u200b\u7684\u200b\u589e\u5220\u200b\u6539\u67e5\u200b</li> </ol>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step1/","title":"\u7b2c\u4e00\u6b65\u200b\uff1a\u200b\u786e\u4fdd\u200b\u624b\u673a\u200b\u4f20\u8f93\u200b\u7684\u200b\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7535\u8111\u200b\u63a5\u6536","text":""},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step1/#1","title":"1. \u200b\u624b\u673a\u200b\u53d1\u9001\u200b\u6a21\u62df\u200b\u4fe1\u606f","text":"<p>\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b<code>seq 1 600 | while read i; do echo $i; sleep 0.01; done | nc 192.168.0.103 8080</code>\uff0c\u200b\u5faa\u73af\u200b\u53d1\u9001\u200b600\u200b\u4e2a\u200b\u6570\u5b57\u200b\u5230\u200b192.168.0.103\u200b\u7684\u200b8080\u200b\u7aef\u53e3\u200b\uff0c\u200b\u7aef\u53e3\u200b\u5f53\u7136\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6539\u200b</p>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step1/#2","title":"2. \u200b\u786e\u4fdd\u200b\u7535\u8111\u200b\u53ef\u4ee5\u200b\u63a5\u6536","text":"<p>\u200b\u5199\u200b\u4e00\u4e2a\u200bcpp\u200b\u6d4b\u8bd5\u4ee3\u7801\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;winsock2.h&gt;              // \u200b\u5305\u542b\u200bWinSock\u200b\u5e93\u200b\n#pragma comment(lib, \"ws2_32.lib\") // \u200b\u94fe\u63a5\u200bWinSock\u200b\u5e93\u200b\n\n#define PORT 8080 // \u200b\u76d1\u542c\u200b\u7684\u200b\u7aef\u53e3\u200b\n\nint main()\n{\n  WSADATA wsa;\n  SOCKET server_socket, client_socket;\n  struct sockaddr_in server, client;\n  int client_len;\n  char buffer[1024];\n\n  // \u200b\u521d\u59cb\u5316\u200bWinsock\n  std::cout &lt;&lt; \"Initializing Winsock...\" &lt;&lt; std::endl;\n  if (WSAStartup(MAKEWORD(2, 2), &amp;wsa) != 0)\n  {\n    std::cerr &lt;&lt; \"Failed. Error Code: \" &lt;&lt; WSAGetLastError() &lt;&lt; std::endl;\n    return 1;\n  }\n\n  // \u200b\u521b\u5efa\u200bSocket\n  if ((server_socket = socket(AF_INET, SOCK_STREAM, 0)) == INVALID_SOCKET)\n  {\n    std::cerr &lt;&lt; \"Could not create socket: \" &lt;&lt; WSAGetLastError() &lt;&lt; std::endl;\n    return 1;\n  }\n\n  std::cout &lt;&lt; \"Socket created.\" &lt;&lt; std::endl;\n\n  // \u200b\u914d\u7f6e\u200b\u670d\u52a1\u5668\u200b\u5730\u5740\u200b\u7ed3\u6784\u200b\n  server.sin_family = AF_INET;\n  server.sin_addr.s_addr = INADDR_ANY; // \u200b\u76d1\u542c\u200b\u6240\u6709\u200b\u53ef\u7528\u200bIP\n  server.sin_port = htons(PORT);       // \u200b\u4f7f\u7528\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7aef\u53e3\u200b\n\n  // \u200b\u7ed1\u5b9a\u200bSocket\n  if (bind(server_socket, (struct sockaddr *)&amp;server, sizeof(server)) == SOCKET_ERROR)\n  {\n    std::cerr &lt;&lt; \"Bind failed with error: \" &lt;&lt; WSAGetLastError() &lt;&lt; std::endl;\n    return 1;\n  }\n\n  std::cout &lt;&lt; \"Bind done.\" &lt;&lt; std::endl;\n\n  // \u200b\u5f00\u59cb\u200b\u76d1\u542c\u200b\n  listen(server_socket, 3);\n  std::cout &lt;&lt; \"Waiting for incoming connections on port \" &lt;&lt; PORT &lt;&lt; \"...\" &lt;&lt; std::endl;\n\n  // \u200b\u63a5\u53d7\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\n  client_len = sizeof(struct sockaddr_in);\n  client_socket = accept(server_socket, (struct sockaddr *)&amp;client, &amp;client_len);\n  if (client_socket == INVALID_SOCKET)\n  {\n    std::cerr &lt;&lt; \"Accept failed with error: \" &lt;&lt; WSAGetLastError() &lt;&lt; std::endl;\n    return 1;\n  }\n\n  std::cout &lt;&lt; \"Connection accepted.\" &lt;&lt; std::endl;\n\n  // \u200b\u8bfb\u53d6\u200b\u5ba2\u6237\u7aef\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u200b\n  while (true)\n  {\n    memset(buffer, 0, sizeof(buffer)); // \u200b\u6e05\u7a7a\u200b\u7f13\u51b2\u533a\u200b\n    int recv_size = recv(client_socket, buffer, sizeof(buffer), 0);\n    if (recv_size == SOCKET_ERROR)\n    {\n      std::cerr &lt;&lt; \"Recv failed with error: \" &lt;&lt; WSAGetLastError() &lt;&lt; std::endl;\n      break;\n    }\n\n    // \u200b\u6253\u5370\u200b\u6536\u5230\u200b\u7684\u200b\u6d88\u606f\u200b\n    std::cout &lt;&lt; \"Received: \" &lt;&lt; buffer &lt;&lt; std::endl;\n  }\n\n  // \u200b\u5173\u95ed\u200bSocket\u200b\u5e76\u200b\u6e05\u7406\u200b\n  closesocket(client_socket);\n  closesocket(server_socket);\n  WSACleanup();\n\n  return 0;\n}\n</code></pre> <p>\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u6307\u4ee4\u200b<code>g++ a.cpp -o run -lws2_32</code>\u200b\u8fdb\u884c\u200b\u7f16\u8bd1\u200b</p>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step1/#3-8080","title":"3. \u200b\u914d\u7f6e\u200b\u9632\u706b\u5899\u200b\u6253\u5f00\u200b\u7aef\u53e3\u200b8080","text":"<p>\u200b\u7f51\u4e0a\u200b\u5f88\u591a\u200b\u6559\u7a0b\u200b\u5c31\u200b\u4e0d\u200b\u8bf4\u200b\u4e86\u200b</p>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step1/#4","title":"4. \u200b\u7ed3\u679c","text":""},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step2/","title":"\u7b2c\u4e8c\u6b65\u200b\uff1a\u200b\u5c06\u200b\u624b\u673a\u200b\u5230\u200b\u7684\u200b\u4fe1\u606f\u200b\u5b58\u50a8\u200b\u5230\u200b\u6570\u636e\u5e93\u200b\u91cc","text":""},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step2/#1","title":"1. \u200b\u4e0b\u8f7d\u200b\u6570\u636e\u5e93","text":"<p>\u200b\u6211\u200b\u662f\u200b\u7528\u200b\u7684\u200b\u662f\u200bsqlite3\uff0c\u200b\u6bd4\u8f83\u200b\u8f7b\u91cf\u200b\uff0c\u200b\u4e0b\u8f7d\u200b\u6e90\u7801\u200b\u5305\u200b\u548c\u200bx64\u200b\u5e93\u5305\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b<code>dlltool -d sqlite3.def -l sqlite3.lib</code>\u200b\u751f\u6210\u200blib\uff0c\u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u6587\u4ef6\u200b\u653e\u5230\u200b\u5de5\u7a0b\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002</p>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step2/#2","title":"2. \u200b\u4ee3\u7801","text":"<p>\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200bgui\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b,\u200b\u4f7f\u7528\u200b <code>g++ server.cpp -o server2 -I\"C:\\Users\\17347\\Desktop\\read\\remote_opencv\\opencv\\sqlite3\" -L. -lsqlite3 -lws2_32 -lgdi32</code>\u200b\u6307\u4ee4\u200b\u7f16\u8bd1\u200b</p> <pre><code>#include &lt;winsock2.h&gt; // \u200b\u5fc5\u987b\u200b\u9996\u5148\u200b\u5305\u542b\u200b\n#include &lt;windows.h&gt;  // \u200b\u7136\u540e\u200b\u5305\u542b\u200b windows.h\n#include &lt;chrono&gt;\n#include &lt;thread&gt;\n#include &lt;string&gt; // \u200b\u6dfb\u52a0\u200b\u8fd9\u4e2a\u200b\u5934\u6587\u4ef6\u200b\u7528\u4e8e\u200b std::string\n#include \"sqlite3/sqlite3.h\"\n\n#pragma comment(lib, \"ws2_32.lib\")\n#pragma comment(lib, \"gdi32.lib\")\n\n#define PORT 8080 // \u200b\u5b9a\u4e49\u200b\u7aef\u53e3\u53f7\u200b\n\nbool saving = false;\nsqlite3 *db;\n\n// \u200b\u51fd\u6570\u200b\uff1a\u200b\u521d\u59cb\u5316\u200b\u6570\u636e\u5e93\u200b\nsqlite3 *initDatabase()\n{\n  sqlite3 *db;\n  int rc = sqlite3_open(\"data.db\", &amp;db);\n  if (rc)\n  {\n    MessageBox(NULL, \"Can't open database\", \"Error\", MB_OK | MB_ICONERROR);\n    return nullptr;\n  }\n  const char *sql = \"CREATE TABLE IF NOT EXISTS Data (ID INTEGER PRIMARY KEY AUTOINCREMENT, Message TEXT NOT NULL, Timestamp TEXT NOT NULL);\";\n  char *errMsg = nullptr;\n  rc = sqlite3_exec(db, sql, nullptr, nullptr, &amp;errMsg);\n  if (rc != SQLITE_OK)\n  {\n    sqlite3_free(errMsg);\n    MessageBox(NULL, \"SQL error\", \"Error\", MB_OK | MB_ICONERROR);\n  }\n  return db;\n}\n\n// \u200b\u51fd\u6570\u200b\uff1a\u200b\u4fdd\u5b58\u200b\u6570\u636e\u200b\u5230\u200b\u6570\u636e\u5e93\u200b\nvoid saveToDatabase(sqlite3 *db, const std::string &amp;message)\n{\n  if (!saving)\n    return;\n\n  std::string sql = \"INSERT INTO Data (Message, Timestamp) VALUES (?, ?);\";\n  sqlite3_stmt *stmt;\n  sqlite3_prepare_v2(db, sql.c_str(), -1, &amp;stmt, nullptr);\n\n  sqlite3_bind_text(stmt, 1, message.c_str(), -1, SQLITE_STATIC);\n  auto now = std::chrono::system_clock::now();\n  auto now_c = std::chrono::system_clock::to_time_t(now);\n  sqlite3_bind_text(stmt, 2, ctime(&amp;now_c), -1, SQLITE_STATIC); // \u200b\u4fdd\u5b58\u200b\u65f6\u95f4\u200b\n\n  sqlite3_step(stmt);\n  sqlite3_finalize(stmt);\n}\n\n// \u200b\u5168\u5c40\u53d8\u91cf\u200b\nHWND hTextBox;\n\n// \u200b\u51fd\u6570\u200b\uff1a\u200b\u5904\u7406\u200b\u6309\u94ae\u200b\u70b9\u51fb\u200b\u4e8b\u4ef6\u200b\nLRESULT CALLBACK WindowProcedure(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)\n{\n  switch (msg)\n  {\n  case WM_CREATE:\n  {\n    // \u200b\u521b\u5efa\u200b\u201c\u200b\u5f00\u59cb\u200b\u4fdd\u5b58\u200b\u201d\u200b\u6309\u94ae\u200b\n    CreateWindow(\"BUTTON\", \"Start Saving\", WS_VISIBLE | WS_CHILD, 20, 20, 120, 30, hwnd, (HMENU)1, NULL, NULL);\n    // \u200b\u521b\u5efa\u200b\u201c\u200b\u505c\u6b62\u200b\u4fdd\u5b58\u200b\u201d\u200b\u6309\u94ae\u200b\n    CreateWindow(\"BUTTON\", \"Stop Saving\", WS_VISIBLE | WS_CHILD, 160, 20, 120, 30, hwnd, (HMENU)2, NULL, NULL);\n    // \u200b\u521b\u5efa\u200b\u6587\u672c\u6846\u200b\u7528\u4e8e\u200b\u663e\u793a\u200b\u63a5\u6536\u200b\u7684\u200b\u6570\u636e\u200b\n    hTextBox = CreateWindow(\"EDIT\", \"\", WS_CHILD | WS_VISIBLE | WS_VSCROLL | ES_MULTILINE | ES_AUTOVSCROLL, 20, 70, 400, 300, hwnd, (HMENU)3, NULL, NULL);\n    break;\n  }\n  case WM_COMMAND:\n  {\n    if (LOWORD(wParam) == 1)\n    {\n      saving = true;\n      SetWindowText(hTextBox, \"Saving started...\\r\\n\");\n    }\n    else if (LOWORD(wParam) == 2)\n    {\n      saving = false;\n      SetWindowText(hTextBox, \"Saving stopped...\\r\\n\");\n    }\n    break;\n  }\n  case WM_DESTROY:\n    PostQuitMessage(0);\n    break;\n  default:\n    return DefWindowProc(hwnd, msg, wParam, lParam);\n  }\n  return 0;\n}\n\n// \u200b\u51fd\u6570\u200b\uff1a\u200b\u521d\u59cb\u5316\u200b\u5e76\u200b\u542f\u52a8\u200b\u670d\u52a1\u5668\u200b\nDWORD WINAPI ServerThread(LPVOID param)\n{\n  WSADATA wsa;\n  SOCKET server_socket, client_socket;\n  struct sockaddr_in server, client;\n  char buffer[1024];\n\n  WSAStartup(MAKEWORD(2, 2), &amp;wsa);\n\n  server_socket = socket(AF_INET, SOCK_STREAM, 0);\n  server.sin_family = AF_INET;\n  server.sin_addr.s_addr = INADDR_ANY;\n  server.sin_port = htons(PORT);\n\n  bind(server_socket, (struct sockaddr *)&amp;server, sizeof(server));\n  listen(server_socket, 3);\n\n  int client_len = sizeof(struct sockaddr_in);\n  client_socket = accept(server_socket, (struct sockaddr *)&amp;client, &amp;client_len);\n\n  db = initDatabase();\n\n  while (true)\n  {\n    memset(buffer, 0, sizeof(buffer));\n    int recv_size = recv(client_socket, buffer, sizeof(buffer), 0);\n    if (recv_size &lt;= 0)\n      break;\n\n    std::string message(buffer, recv_size);\n\n    std::string currentText(1024, 0);\n    GetWindowText(hTextBox, &amp;currentText[0], 1024);\n    currentText.resize(strlen(currentText.c_str()));\n    currentText += message + \"\\r\\n\";\n    SetWindowText(hTextBox, currentText.c_str());\n\n    saveToDatabase(db, message);\n  }\n\n  closesocket(client_socket);\n  closesocket(server_socket);\n  WSACleanup();\n\n  sqlite3_close(db);\n\n  return 0;\n}\n\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)\n{\n  WNDCLASS wc = {0};\n  wc.lpfnWndProc = WindowProcedure;\n  wc.hInstance = hInstance;\n  wc.lpszClassName = \"MyWindowClass\";\n  wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n  wc.hCursor = LoadCursor(NULL, IDC_ARROW);\n\n  RegisterClass(&amp;wc);\n\n  HWND hwnd = CreateWindow(\"MyWindowClass\", \"Server GUI\", WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT, 450, 450, NULL, NULL, hInstance, NULL);\n  ShowWindow(hwnd, nCmdShow);\n\n  CreateThread(NULL, 0, ServerThread, NULL, 0, NULL);\n\n  MSG msg = {0};\n  while (GetMessage(&amp;msg, NULL, 0, 0))\n  {\n    TranslateMessage(&amp;msg);\n    DispatchMessage(&amp;msg);\n  }\n\n  return msg.wParam;\n}\n</code></pre>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step2/#3","title":"3. \u200b\u7ed3\u679c","text":"<p>\u200b\u7ed3\u679c\u200b\u5e94\u8be5\u200b\u662f\u200b\u5de5\u7a0b\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\u6709\u200b\u751f\u6210\u200bdb\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u6570\u636e\u200b\u5c31\u200b\u88ab\u200b\u4fdd\u5b58\u200b\u5566\u200b</p>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step3/","title":"\u7b2c\u4e09\u6b65\u200b\uff1a\u200b\u5bf9\u200b\u6570\u636e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u89e3\u6790\u200b\u5b58\u50a8\u200b\u5230\u200b\u6570\u636e\u5e93","text":"<p>\u200b\u6709\u65f6\u5019\u200b\u5982\u679c\u200b\u8fdb\u884c\u200b\u5b9e\u65f6\u200b\u89e3\u6790\u200b\u53ef\u80fd\u200b\u5b9e\u65f6\u6027\u200b\u4e0d\u591f\u200b\uff0c\u200b\u8fd9\u65f6\u5019\u200b\u6211\u4eec\u200b\u5728\u200b\u624b\u673a\u200b\u7aef\u200b\u5148\u8fdb\u6027\u200b\u6570\u636e\u200b\u6536\u96c6\u200b\uff0c\u200b\u7136\u540e\u200b\u518d\u200b\u8fdb\u884c\u200b\u89e3\u6790\u200b\u548c\u200b\u53ef\u89c6\u5316\u200b\u3002\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a \u200b\u7f16\u8bd1\u200b\u6307\u4ee4\u200b\u4e3a\u200b\uff1a<code>g++ store.cpp -o server -I\"C:\\Users\\17347\\Desktop\\read\\remote_opencv\\opencv\\sqlite3\" -L. -lsqlite3 -lws2_32</code></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;ctime&gt;\n#include &lt;sqlite3.h&gt;\n#include &lt;sstream&gt; // \u200b\u6dfb\u52a0\u200b\u8fd9\u4e2a\u200b\u5934\u6587\u4ef6\u200b\u4ee5\u200b\u4f7f\u7528\u200b stringstream\n\n// \u200b\u5b9a\u4e49\u200b\u5e27\u200b\u6570\u636e\u7ed3\u6784\u200b\nstruct FrameData\n{\n  int frameNumber;\n  std::vector&lt;std::vector&lt;int&gt;&gt; data;\n};\n\n// \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\u6233\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u8868\u540d\u200b\nstd::string getTimestamp()\n{\n  time_t now = time(0);\n  tm *ltm = localtime(&amp;now);\n  char timestamp[20];\n  sprintf(timestamp, \"%04d%02d%02d%02d%02d%02d\", 1900 + ltm-&gt;tm_year, 1 + ltm-&gt;tm_mon, ltm-&gt;tm_mday, ltm-&gt;tm_hour, ltm-&gt;tm_min, ltm-&gt;tm_sec);\n  return std::string(timestamp);\n}\n\n// \u200b\u521b\u5efa\u200bSQLite\u200b\u6570\u636e\u5e93\u200b\u5e76\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\nbool insertDataToDatabase(const std::string &amp;tableName, const std::vector&lt;FrameData&gt; &amp;frames)\n{\n  sqlite3 *db;\n  char *errMsg = 0;\n  int rc = sqlite3_open(\"frame_data.db\", &amp;db);\n\n  if (rc)\n  {\n    std::cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6570\u636e\u5e93\u200b: \" &lt;&lt; sqlite3_errmsg(db) &lt;&lt; std::endl;\n    return false;\n  }\n\n  // \u200b\u521b\u5efa\u200b\u8868\u200b\n  std::string createTableSQL = \"CREATE TABLE IF NOT EXISTS \" + tableName + \" (FrameNumber INT, Data TEXT);\";\n  rc = sqlite3_exec(db, createTableSQL.c_str(), 0, 0, &amp;errMsg);\n  if (rc != SQLITE_OK)\n  {\n    std::cerr &lt;&lt; \"\u200b\u521b\u5efa\u200b\u8868\u200b\u5931\u8d25\u200b: \" &lt;&lt; errMsg &lt;&lt; std::endl;\n    sqlite3_free(errMsg);\n    sqlite3_close(db);\n    return false;\n  }\n\n  // \u200b\u63d2\u5165\u200b\u6570\u636e\u200b\n  for (const auto &amp;frame : frames)\n  {\n    std::string dataString;\n    for (const auto &amp;row : frame.data)\n    {\n      for (const auto &amp;value : row)\n      {\n        dataString += std::to_string(value) + \" \";\n      }\n      dataString += \";\"; // \u200b\u6bcf\u884c\u200b\u6570\u636e\u200b\u4ee5\u5206\u200b\u53f7\u200b\u5206\u9694\u200b\n    }\n\n    std::string insertSQL = \"INSERT INTO \" + tableName + \" (FrameNumber, Data) VALUES (\" +\n                            std::to_string(frame.frameNumber) + \", '\" + dataString + \"');\";\n    rc = sqlite3_exec(db, insertSQL.c_str(), 0, 0, &amp;errMsg);\n    if (rc != SQLITE_OK)\n    {\n      std::cerr &lt;&lt; \"\u200b\u63d2\u5165\u200b\u6570\u636e\u200b\u5931\u8d25\u200b: \" &lt;&lt; errMsg &lt;&lt; std::endl;\n      sqlite3_free(errMsg);\n    }\n  }\n\n  sqlite3_close(db);\n  return true;\n}\n\n// \u200b\u4ece\u6587\u4ef6\u200b\u8bfb\u53d6\u200b\u5e27\u200b\u6570\u636e\u200b\nstd::vector&lt;FrameData&gt; readDataFromFile(const std::string &amp;filename)\n{\n  std::ifstream file(filename);\n  std::vector&lt;FrameData&gt; frames;\n  if (!file.is_open())\n  {\n    std::cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\" &lt;&lt; std::endl;\n    return frames;\n  }\n\n  std::string line;\n  int frameNumber = 0;\n  while (std::getline(file, line))\n  {\n    if (line.find(\"Frame:\") != std::string::npos)\n    {\n      frameNumber = std::stoi(line.substr(line.find(\"Frame:\") + 6));\n    }\n    else if (line.find(\"[\") != std::string::npos)\n    {\n      FrameData frame;\n      frame.frameNumber = frameNumber;\n\n      std::vector&lt;int&gt; row;\n      while (std::getline(file, line) &amp;&amp; line.find(\"ChannelEnd\") == std::string::npos)\n      {\n        if (line.find(\"[\") != std::string::npos)\n        {\n          std::stringstream ss(line);\n          std::string temp;\n          while (ss &gt;&gt; temp)\n          {\n            if (isdigit(temp[0]) || temp[0] == '-')\n            {\n              row.push_back(std::stoi(temp));\n            }\n          }\n          frame.data.push_back(row);\n          row.clear();\n        }\n      }\n\n      frames.push_back(frame);\n    }\n  }\n\n  file.close();\n  return frames;\n}\n\nint main()\n{\n  std::string filename = \"a.txt\"; // \u200b\u8f93\u5165\u200b\u6587\u4ef6\u540d\u200b\n  std::vector&lt;FrameData&gt; frames = readDataFromFile(filename);\n\n  if (frames.empty())\n  {\n    std::cerr &lt;&lt; \"\u200b\u6ca1\u6709\u200b\u8bfb\u53d6\u200b\u5230\u200b\u6709\u6548\u200b\u6570\u636e\u200b\" &lt;&lt; std::endl;\n    return -1;\n  }\n\n  std::string tableName = \"FrameData_\" + getTimestamp();\n  if (insertDataToDatabase(tableName, frames))\n  {\n    std::cout &lt;&lt; \"\u200b\u6570\u636e\u200b\u5df2\u200b\u6210\u529f\u200b\u63d2\u5165\u200b\u5230\u8868\u200b\uff1a\" &lt;&lt; tableName &lt;&lt; std::endl;\n  }\n  else\n  {\n    std::cerr &lt;&lt; \"\u200b\u6570\u636e\u200b\u63d2\u5165\u200b\u5931\u8d25\u200b\" &lt;&lt; std::endl;\n  }\n\n  return 0;\n}\n\n</code></pre>"},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step4/","title":"\u7b2c\u56db\u6b65\u200b\uff1a\u200b\u591a\u79cd\u200b\u65b9\u5f0f\u200b\u4ece\u200b\u6570\u636e\u5e93\u200b\u8bfb\u53d6\u6570\u636e","text":""},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step4/#1-cpp","title":"1. \u200b\u4f7f\u7528\u200bcpp","text":""},{"location":"project/1_%E6%89%8B%E6%9C%BA%E4%BC%A0%E8%BE%93%E4%BF%A1%E6%81%AF%E7%94%B5%E8%84%91%E6%8E%A5%E6%94%B6/step4/#2-flaskpythonhtml","title":"2. \u200b\u4f7f\u7528\u200bflask&amp;python&amp;html","text":"<p>\u200b\u4f7f\u7528\u200b\u524d\u7aef\u200b\u53ef\u4ee5\u200b\u6bd4\u8f83\u200b\u65b9\u4fbf\u200b\u5feb\u901f\u200b\u5730\u200b\u8fdb\u884c\u200b\u53ef\u89c6\u5316\u200b\u800c\u200b\u4e0d\u7528\u200b\u914d\u7f6e\u200b\u592a\u200b\u591a\u200b\u73af\u5883\u200b</p> <pre><code> from flask import Flask, jsonify, request\nimport sqlite3\n\napp = Flask(__name__, static_folder='../static', static_url_path='')\n\n\n# \u200b\u83b7\u53d6\u200b\u6240\u6709\u200b\u8868\u540d\u200b\u7684\u200bAPI\n@app.route('/api/tables', methods=['GET'])\ndef get_table_names():\n    conn = sqlite3.connect('frame_data.db')\n    cursor = conn.cursor()\n    cursor.execute(\"SELECT name FROM sqlite_master WHERE type='table';\")\n    tables = cursor.fetchall()\n    conn.close()\n    return jsonify([table[0] for table in tables])\n\n# \u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u8868\u4e2d\u200b\u6240\u6709\u200b\u8bb0\u5f55\u200b\u7684\u200b\u5e27\u200b\u7f16\u53f7\u200bAPI\n@app.route('/api/frames', methods=['GET'])\ndef get_frame_numbers():\n    table_name = request.args.get('table')\n    if not table_name:\n        return jsonify({'error': 'Table name is required.'}), 400\n\n    conn = sqlite3.connect('frame_data.db')\n    cursor = conn.cursor()\n    try:\n        cursor.execute(f\"SELECT FrameNumber FROM {table_name}\")\n    except sqlite3.OperationalError as e:\n        return jsonify({'error': f'Table {table_name} not found or query failed.'}), 400\n\n    frames = cursor.fetchall()\n    conn.close()\n\n    return jsonify([frame[0] for frame in frames])\n\n# \u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u8868\u548c\u5e27\u200b\u7f16\u53f7\u200b\u7684\u200b\u6570\u636e\u200bAPI\n@app.route('/api/data', methods=['GET'])\ndef get_frame_data():\n    table_name = request.args.get('table')\n    frame_number = request.args.get('frame')\n\n    if not table_name or not frame_number:\n        return jsonify({'error': 'Table name and frame number are required.'}), 400\n\n    conn = sqlite3.connect('frame_data.db')\n    cursor = conn.cursor()\n    try:\n        cursor.execute(f\"SELECT Data FROM {table_name} WHERE FrameNumber = ?\", (frame_number,))\n        data = cursor.fetchone()\n\n        if data:\n            frame_data = data[0]\n            formatted_data = [list(map(int, row.split())) for row in frame_data.split(';') if row]\n            return jsonify(formatted_data)\n        else:\n            return jsonify({'error': 'No data found for the specified frame number.'}), 404\n    except sqlite3.OperationalError as e:\n        return jsonify({'error': f'Table {table_name} not found or query failed.'}), 400\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n</code></pre> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Heatmap.js \u200b\u793a\u4f8b\u200b&lt;/title&gt;\n  &lt;script src=\"https://cdn.jsdelivr.net/npm/heatmap.js\"&gt;&lt;/script&gt;\n  &lt;style&gt;\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f7f7f7;\n      margin: 0;\n      padding: 0;\n    }\n\n    h1 {\n      text-align: center;\n      color: #333;\n      margin-top: 20px;\n    }\n\n    .container {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n      padding: 20px;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n\n    /* \u200b\u5de6\u4fa7\u200b\u9009\u62e9\u200b\u6846\u200b */\n    #controls {\n      flex: 0 0 300px;\n      background-color: #fff;\n      padding: 15px;\n      border-radius: 8px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      margin-right: 20px;\n    }\n\n    #controls label {\n      margin-right: 10px;\n      font-weight: bold;\n      color: #555;\n    }\n\n    #controls select,\n    #controls input {\n      padding: 8px;\n      margin: 10px 0;\n      width: 100%;\n      border-radius: 5px;\n      border: 1px solid #ccc;\n      font-size: 14px;\n      color: #333;\n    }\n\n    #controls button {\n      padding: 10px;\n      margin: 10px 0;\n      width: 100%;\n      background-color: #4CAF50;\n      border: none;\n      border-radius: 5px;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n\n    #controls button:hover {\n      background-color: #45a049;\n    }\n\n    #stopButton {\n      background-color: #f44336;\n    }\n\n    #stopButton:hover {\n      background-color: #e41f20;\n    }\n\n    #scrollButton {\n      background-color: #2196F3;\n    }\n\n    #scrollButton:hover {\n      background-color: #0b7dda;\n    }\n\n    /* \u200b\u53f3\u4fa7\u200b\u70ed\u200b\u529b\u56fe\u200b\u5bb9\u5668\u200b */\n    #heatmapContainer {\n      position: relative;\n      flex-grow: 1;\n      border: 1px solid #ccc;\n      background-color: #fff;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n      overflow: hidden;\n    }\n\n    #canvasOverlay {\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    /* \u200b\u5c0f\u200b\u5c4f\u5e55\u200b\u5e03\u5c40\u8c03\u6574\u200b */\n    @media screen and (max-width: 768px) {\n      .container {\n        flex-direction: column;\n        align-items: center;\n      }\n\n      #controls {\n        width: 100%;\n        margin-bottom: 20px;\n        margin-right: 0;\n      }\n\n      #heatmapContainer {\n        width: 100%;\n      }\n    }\n\n    .footer {\n      text-align: center;\n      margin-top: 30px;\n      font-size: 12px;\n      color: #777;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;div class=\"container\"&gt;\n    &lt;!-- \u200b\u5de6\u4fa7\u200b\u7684\u200b\u9009\u62e9\u200b\u6846\u200b\u90e8\u5206\u200b --&gt;\n    &lt;div id=\"controls\"&gt;\n      &lt;label for=\"tableSelect\"&gt;\u200b\u9009\u62e9\u200b\u6570\u636e\u5e93\u200b\u8868\u683c\u200b\uff1a&lt;/label&gt;\n      &lt;select id=\"tableSelect\"&gt;\n        &lt;option value=\"\"&gt;--\u200b\u8bf7\u200b\u9009\u62e9\u200b\u8868\u683c\u200b--&lt;/option&gt;\n      &lt;/select&gt;\n\n      &lt;label for=\"frameSelect\"&gt;\u200b\u9009\u62e9\u200b\u5e27\u200b\u7f16\u53f7\u200b\uff1a&lt;/label&gt;\n      &lt;select id=\"frameSelect\"&gt;\n        &lt;option value=\"\"&gt;--\u200b\u8bf7\u200b\u9009\u62e9\u200b\u5e27\u200b--&lt;/option&gt;\n      &lt;/select&gt;\n\n      &lt;label for=\"intervalInput\"&gt;\u200b\u64ad\u653e\u200b\u95f4\u9694\u200b\uff08\u200b\u6beb\u79d2\u200b\uff09\uff1a&lt;/label&gt;\n      &lt;input type=\"number\" id=\"intervalInput\" value=\"600\"&gt;\n\n      &lt;label for=\"heatmapWidth\"&gt;\u200b\u70ed\u200b\u529b\u56fe\u200b\u5bbd\u5ea6\u200b\uff1a&lt;/label&gt;\n      &lt;input type=\"number\" id=\"heatmapWidth\" value=\"800\"&gt;\n\n      &lt;label for=\"heatmapHeight\"&gt;\u200b\u70ed\u200b\u529b\u56fe\u200b\u9ad8\u5ea6\u200b\uff1a&lt;/label&gt;\n      &lt;input type=\"number\" id=\"heatmapHeight\" value=\"1000\"&gt;\n\n      &lt;button id=\"playButton\"&gt;\u200b\u64ad\u653e\u200b&lt;/button&gt;\n      &lt;button id=\"stopButton\"&gt;\u200b\u505c\u6b62\u200b&lt;/button&gt;\n      &lt;button id=\"scrollButton\"&gt;\u200b\u6eda\u8f6e\u200b\u5207\u6362\u200b&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;!-- \u200b\u53f3\u4fa7\u200b\u7684\u200b\u70ed\u200b\u529b\u56fe\u200b\u90e8\u5206\u200b --&gt;\n    &lt;div id=\"heatmapContainer\"&gt;\n      &lt;canvas id=\"canvasOverlay\"&gt;&lt;/canvas&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"footer\"&gt;\n    &lt;p&gt;\u00a9 2024 Heatmap Visualization | Made with \u2764\ufe0f&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;script&gt;\n    let playInterval = null;\n    let currentFrame = 0;\n    let heatmapInstance = null;\n    let scrollEnabled = false;\n    let scrollTimeout = null;\n\n    // \u200b\u521d\u59cb\u5316\u200b Heatmap \u200b\u548c\u200b Canvas \u200b\u5bb9\u5668\u200b\n    function initializeHeatmap() {\n      const heatmapContainer = document.getElementById('heatmapContainer');\n      const canvasOverlay = document.getElementById('canvasOverlay');\n      const heatmapWidth = parseInt(document.getElementById('heatmapWidth').value);\n      const heatmapHeight = parseInt(document.getElementById('heatmapHeight').value);\n\n      // \u200b\u9650\u5236\u200b\u6700\u5c0f\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u9ad8\u5ea6\u200b\n      const minWidth = 300;\n      const minHeight = 300;\n      const adjustedHeatmapWidth = Math.max(heatmapWidth, minWidth);\n      const adjustedHeatmapHeight = Math.max(heatmapHeight, minHeight);\n\n      // \u200b\u8bbe\u7f6e\u200b\u70ed\u200b\u529b\u56fe\u200b\u5bb9\u5668\u200b\u548c\u200b canvasOverlay \u200b\u7684\u200b\u5927\u5c0f\u200b\n      heatmapContainer.style.width = `${adjustedHeatmapWidth}px`;\n      heatmapContainer.style.height = `${adjustedHeatmapHeight}px`;\n      canvasOverlay.width = adjustedHeatmapWidth;\n      canvasOverlay.height = adjustedHeatmapHeight;\n\n      // \u200b\u521b\u5efa\u200b heatmap \u200b\u5b9e\u4f8b\u200b\n      heatmapInstance = h337.create({\n        container: heatmapContainer,\n        maxOpacity: 0.6,\n        radius: Math.min(adjustedHeatmapWidth / 10, adjustedHeatmapHeight / 10) / 2, // \u200b\u52a8\u6001\u200b\u8c03\u6574\u200b radius\n        blur: 0.85\n      });\n\n      // \u200b\u8c03\u6574\u200b heatmap.js \u200b\u5185\u90e8\u200b\u751f\u6210\u200b\u7684\u200b canvas \u200b\u5c3a\u5bf8\u200b\n      const heatmapCanvas = heatmapInstance._renderer.canvas;\n      heatmapCanvas.width = adjustedHeatmapWidth;\n      heatmapCanvas.height = adjustedHeatmapHeight;\n    }\n\n    // \u200b\u83b7\u53d6\u200b\u6240\u6709\u200b\u8868\u540d\u200b\u5e76\u200b\u586b\u5145\u200b\u4e0b\u62c9\u83dc\u5355\u200b\n    async function fetchTables() {\n      const response = await fetch('/api/tables');\n      const tables = await response.json();\n      const tableSelect = document.getElementById('tableSelect');\n      tables.forEach(table =&gt; {\n        const option = document.createElement('option');\n        option.value = table;\n        option.text = table;\n        tableSelect.appendChild(option);\n      });\n    }\n\n    // \u200b\u6839\u636e\u200b\u9009\u62e9\u200b\u7684\u200b\u8868\u540d\u200b\u83b7\u53d6\u200b\u6240\u6709\u200b\u5e27\u200b\u7f16\u53f7\u200b\n    async function fetchFrames(table) {\n      const response = await fetch(`/api/frames?table=${table}`);\n      const frames = await response.json();\n      const frameSelect = document.getElementById('frameSelect');\n      frameSelect.innerHTML = '&lt;option value=\"\"&gt;--\u200b\u8bf7\u200b\u9009\u62e9\u200b\u5e27\u200b--&lt;/option&gt;'; // \u200b\u91cd\u7f6e\u200b\u5e27\u200b\u7f16\u53f7\u200b\u4e0b\u62c9\u83dc\u5355\u200b\n      frames.forEach(frame =&gt; {\n        const option = document.createElement('option');\n        option.value = frame;\n        option.text = frame;\n        frameSelect.appendChild(option);\n      });\n    }\n\n    // \u200b\u6839\u636e\u200b\u9009\u62e9\u200b\u7684\u200b\u8868\u540d\u200b\u548c\u200b\u5e27\u200b\u7f16\u53f7\u200b\u83b7\u53d6\u200b\u5e27\u200b\u6570\u636e\u200b\n    async function fetchData(table, frame) {\n      if (!frame) {\n        console.error('Frame is not selected or invalid.');\n        return;\n      }\n\n      const response = await fetch(`/api/data?table=${table}&amp;frame=${frame}`);\n      if (!response.ok) {\n        console.error(`Failed to fetch data: ${response.statusText}`);\n        return;\n      }\n\n      const data = await response.json();\n      if (!Array.isArray(data) || !Array.isArray(data[0])) {\n        console.error('Data is not in the expected format.');\n        return;\n      }\n\n      renderHeatmap(data);\n    }\n\n    // \u200b\u6e32\u67d3\u200b heatmap \u200b\u6570\u636e\u200b\n    function renderHeatmap(data) {\n      const dataPoints = [];\n      const numRows = data.length;\n      const numCols = data[0].length;\n      const heatmapWidth = parseInt(document.getElementById('heatmapWidth').value);\n      const heatmapHeight = parseInt(document.getElementById('heatmapHeight').value);\n\n      // \u200b\u8bbe\u7f6e\u200b heatmap \u200b\u548c\u200b canvasOverlay \u200b\u7684\u200b\u5bbd\u200b\u9ad8\u200b\n      const adjustedHeatmapWidth = Math.max(heatmapWidth, 300);\n      const adjustedHeatmapHeight = Math.max(heatmapHeight, 300);\n      document.getElementById('heatmapContainer').style.width = `${adjustedHeatmapWidth}px`;\n      document.getElementById('heatmapContainer').style.height = `${adjustedHeatmapHeight}px`;\n      document.getElementById('canvasOverlay').width = adjustedHeatmapWidth;\n      document.getElementById('canvasOverlay').height = adjustedHeatmapHeight;\n\n      // \u200b\u540c\u6b65\u200b\u8c03\u6574\u200b heatmap.js \u200b\u5185\u90e8\u200b canvas \u200b\u7684\u200b\u5bbd\u200b\u9ad8\u200b\n      const heatmapCanvas = heatmapInstance._renderer.canvas;\n      heatmapCanvas.width = adjustedHeatmapWidth;\n      heatmapCanvas.height = adjustedHeatmapHeight;\n\n      // \u200b\u6839\u636e\u200b\u6570\u636e\u200b\u751f\u6210\u200b heatmap.js \u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5750\u6807\u200b\u70b9\u200b\n      for (let row = 0; row &lt; numRows; row++) {\n        for (let col = 0; col &lt; numCols; col++) {\n          dataPoints.push({\n            x: col * (adjustedHeatmapWidth / numCols) + (adjustedHeatmapWidth / numCols) / 2,  // \u200b\u683c\u5b50\u200b\u4e2d\u5fc3\u200b\u7684\u200bx\u200b\u4f4d\u7f6e\u200b\n            y: row * (adjustedHeatmapHeight / numRows) + (adjustedHeatmapHeight / numRows) / 2,  // \u200b\u683c\u5b50\u200b\u4e2d\u5fc3\u200b\u7684\u200by\u200b\u4f4d\u7f6e\u200b\n            value: data[row][col]  // \u200b\u503c\u200b\n          });\n        }\n      }\n\n      // \u200b\u8bbe\u7f6e\u200b\u70ed\u200b\u529b\u56fe\u200b\u6570\u636e\u200b\n      heatmapInstance.setData({\n        max: 100,  // \u200b\u6839\u636e\u200b\u4f60\u200b\u7684\u200b\u6570\u636e\u200b\u8c03\u6574\u200b\u8fd9\u4e2a\u200b\u503c\u200b\n        data: dataPoints\n      });\n\n      // \u200b\u7ed8\u5236\u200b\u6570\u503c\u200b\u5230\u200b Canvas\n      drawTextOnCanvas(data, numRows, numCols, adjustedHeatmapWidth, adjustedHeatmapHeight);\n    }\n\n    // \u200b\u7ed8\u5236\u200b\u6570\u503c\u200b\u5230\u200b Canvas\n    function drawTextOnCanvas(data, numRows, numCols, heatmapWidth, heatmapHeight) {\n      const canvas = document.getElementById('canvasOverlay');\n      const ctx = canvas.getContext('2d', { willReadFrequently: true });\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // \u200b\u6e05\u7a7a\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u7ed8\u5236\u200b\u5185\u5bb9\u200b\n      ctx.font = '16px Arial';\n      ctx.fillStyle = 'black';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n\n      // \u200b\u7ed8\u5236\u200b\u6bcf\u4e2a\u200b\u683c\u5b50\u200b\u4e2d\u200b\u7684\u200b\u6570\u503c\u200b\n      for (let row = 0; row &lt; numRows; row++) {\n        for (let col = 0; col &lt; numCols; col++) {\n          const x = col * (heatmapWidth / numCols) + (heatmapWidth / numCols) / 2;\n          const y = row * (heatmapHeight / numRows) + (heatmapHeight / numRows) / 2;\n          const value = data[row][col];\n          ctx.fillText(value, x, y); // \u200b\u5728\u200b\u683c\u5b50\u200b\u4e2d\u5fc3\u200b\u7ed8\u5236\u200b\u6587\u672c\u200b\n        }\n      }\n    }\n\n    // \u200b\u81ea\u52a8\u64ad\u653e\u200b\u529f\u80fd\u200b\n    function playFrames() {\n      const interval = parseInt(document.getElementById('intervalInput').value, 10);\n      if (!interval || interval &lt;= 0) return;\n\n      playInterval = setInterval(() =&gt; {\n        const frameSelect = document.getElementById('frameSelect');\n        if (frameSelect.selectedIndex === -1) {\n          console.error('No frame selected.');\n          return;\n        }\n        currentFrame = (currentFrame + 1) % frameSelect.options.length;\n        frameSelect.selectedIndex = currentFrame;\n        fetchData(document.getElementById('tableSelect').value, frameSelect.value);\n      }, interval);\n    }\n\n    // \u200b\u505c\u6b62\u200b\u64ad\u653e\u200b\u529f\u80fd\u200b\n    function stopFrames() {\n      if (playInterval) {\n        clearInterval(playInterval);\n        playInterval = null;\n      }\n    }\n\n    // \u200b\u6eda\u8f6e\u200b\u5207\u6362\u200b\u529f\u80fd\u200b\n    function toggleScrollFrames() {\n      if (scrollEnabled) {\n        // \u200b\u505c\u6b62\u200b\u6eda\u8f6e\u200b\u5207\u6362\u200b\n        window.removeEventListener('wheel', handleScroll);\n        scrollEnabled = false;\n      } else {\n        // \u200b\u542f\u7528\u200b\u6eda\u8f6e\u200b\u5207\u6362\u200b\n        window.addEventListener('wheel', handleScroll);\n        scrollEnabled = true;\n      }\n    }\n\n    // \u200b\u5904\u7406\u200b\u6eda\u8f6e\u200b\u4e8b\u4ef6\u200b\n    function handleScroll(event) {\n      clearTimeout(scrollTimeout); // \u200b\u91cd\u7f6e\u200b\u6eda\u8f6e\u200b\u505c\u6b62\u200b\u8ba1\u65f6\u5668\u200b\n      const delta = Math.sign(event.deltaY);\n      const frameSelect = document.getElementById('frameSelect');\n\n      if (delta &gt; 0) {\n        // \u200b\u5411\u4e0b\u200b\u6eda\u52a8\u200b\uff0c\u200b\u4e0b\u200b\u4e00\u5e27\u200b\n        currentFrame = (currentFrame + 1) % frameSelect.options.length;\n      } else {\n        // \u200b\u5411\u4e0a\u200b\u6eda\u52a8\u200b\uff0c\u200b\u4e0a\u200b\u4e00\u5e27\u200b\n        currentFrame = (currentFrame - 1 + frameSelect.options.length) % frameSelect.options.length;\n      }\n\n      frameSelect.selectedIndex = currentFrame;\n      fetchData(document.getElementById('tableSelect').value, frameSelect.value);\n\n      // \u200b\u5982\u679c\u200b\u6eda\u8f6e\u200b\u505c\u6b62\u200b 500ms \u200b\u540e\u200b\u6ca1\u6709\u200b\u7ee7\u7eed\u200b\u6eda\u52a8\u200b\uff0c\u200b\u505c\u6b62\u200b\u66f4\u65b0\u200b\u70ed\u56fe\u200b\n      scrollTimeout = setTimeout(() =&gt; {\n        console.log(\"\u200b\u505c\u6b62\u200b\u6eda\u52a8\u200b\uff0c\u200b\u505c\u6b62\u200b\u66f4\u65b0\u200b\u70ed\u56fe\u200b\u3002\");\n        stopFrames();\n      }, 500); // 500 \u200b\u6beb\u79d2\u200b\u4f5c\u4e3a\u200b\u68c0\u6d4b\u200b\u505c\u6b62\u200b\u7684\u200b\u5ef6\u8fdf\u65f6\u95f4\u200b\n    }\n\n    // \u200b\u5f53\u200b\u7528\u6237\u200b\u9009\u62e9\u200b\u8868\u65f6\u200b\uff0c\u200b\u83b7\u53d6\u200b\u8be5\u8868\u4e2d\u200b\u7684\u200b\u5e27\u200b\u7f16\u53f7\u200b\n    document.getElementById('tableSelect').addEventListener('change', function () {\n      const selectedTable = this.value;\n      if (selectedTable) {\n        fetchFrames(selectedTable);\n      }\n    });\n\n    // \u200b\u5f53\u200b\u7528\u6237\u200b\u9009\u62e9\u200b\u5e27\u200b\u65f6\u200b\uff0c\u200b\u83b7\u53d6\u200b\u8be5\u200b\u5e27\u200b\u7684\u200b\u6570\u636e\u200b\n    document.getElementById('frameSelect').addEventListener('change', function () {\n      const selectedFrame = this.value;\n      const selectedTable = document.getElementById('tableSelect').value;\n      if (selectedTable &amp;&amp; selectedFrame) {\n        currentFrame = this.selectedIndex;\n        fetchData(selectedTable, selectedFrame);\n      }\n    });\n\n    // \u200b\u64ad\u653e\u6309\u94ae\u200b\u70b9\u51fb\u200b\n    document.getElementById('playButton').addEventListener('click', function () {\n      playFrames();\n    });\n\n    // \u200b\u505c\u6b62\u200b\u6309\u94ae\u200b\u70b9\u51fb\u200b\n    document.getElementById('stopButton').addEventListener('click', function () {\n      stopFrames();\n    });\n\n    // \u200b\u6eda\u8f6e\u200b\u5207\u6362\u200b\u6309\u94ae\u200b\u70b9\u51fb\u200b\n    document.getElementById('scrollButton').addEventListener('click', function () {\n      toggleScrollFrames();\n    });\n\n    // \u200b\u9875\u9762\u200b\u52a0\u8f7d\u200b\u65f6\u200b\u83b7\u53d6\u200b\u6240\u6709\u200b\u8868\u200b\n    fetchTables();\n    initializeHeatmap();\n  &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/","title":"R\u200b\u5b9e\u6218\u200b\uff1a\u200b\u6587\u4ef6\u200b\u8fc7\u6ee4","text":"","tags":["R"]},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/#_1","title":"\u76ee\u6807","text":"<p>\u200b\u8fc7\u6ee4\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7c7b\u4f3c\u200b[1],[2]\u200b\u7b49\u200b\u8fd9\u79cd\u200b\u884c\u53f7\u200b\u5217\u53f7\u200b\uff0c\u200b\u4ee5\u53ca\u200bChannelStart:   18,   32\u200b\u548c\u200bFrame: 10841\u200b\u8fd9\u6837\u200b\u7684\u200b\u884c\u200b</p>","tags":["R"]},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/#_2","title":"\u4ee3\u7801","text":"<pre><code># \u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\ndata &lt;- readLines(\"./a.txt\")\n\n# \u200b\u8fc7\u6ee4\u200b\u6389\u200b\u5305\u542b\u200b 'ChannelStart: 18, 32' \u200b\u548c\u200b 'ChannelEnd' \u200b\u7684\u200b\u884c\u200b\nfiltered_data &lt;- data[!grepl(\"ChannelStart:\\\\s+18,\\\\s+32|Frame:\\\\s+\\\\d+\", data)]\n\n# \u200b\u5220\u9664\u200b\u6240\u6709\u200b\u7684\u200b\u65b9\u62ec\u53f7\u200b\u53ca\u5176\u200b\u5185\u90e8\u200b\u5185\u5bb9\u200b\ncleaned_data &lt;- gsub(\"\\\\[\\\\d+\\\\]\", \"\", filtered_data)\n\n# \u200b\u8f93\u51fa\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u6587\u672c\u6587\u4ef6\u200b\nwriteLines(cleaned_data, \"cleaned_output.txt\")\n\n</code></pre>","tags":["R"]},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/#_3","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u89e3\u8bfb","text":"<ol> <li><code>ChannelStart:\\\\s+18,\\\\s+32</code>\u200b\u8868\u793a\u200bChannelStart:+\u200b\u82e5\u5e72\u4e2a\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b+18+\u200b\u82e5\u5e72\u4e2a\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b+32</li> <li><code>Frame:\\\\s+\\\\d+</code>\u200b\u8868\u793a\u200bFrame:+\u200b\u82e5\u5e72\u4e2a\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b+\u200b\u82e5\u5e72\u4e2a\u200b0-9\u200b\u7684\u200b\u6570\u5b57\u200b</li> <li><code>\\\\[\\\\d+\\\\]</code>\u200b\u8868\u793a\u200b[+\u200b\u591a\u4f4d\u200b\u6570\u5b57\u200b+]\uff0c\u200b\u4f7f\u7528\u200b\\\u200b\u4e3a\u200b\u8f6c\u4e49\u200b\u7b26\u200b\u907f\u514d\u200b\u8f6c\u4e49\u200b</li> </ol>","tags":["R"]},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/#readlineswritelines","title":"readLines\u200b\u548c\u200bWriteLines","text":"<p>\u200b\u6309\u884c\u200b\u8bfb\u200b\u548c\u200b\u5199\u200b</p>","tags":["R"]},{"location":"r%E5%AE%9E%E6%88%98/%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4/#greplgsub","title":"grepl\u200b\u548c\u200bgsub","text":"<p>grepl\u200b\u4f1a\u200b\u641c\u5bfb\u200b\u5339\u914d\u200b\u6210\u529f\u200b\u7684\u200b\u884c\u200b\uff0c\u200b\u800c\u200bgsub\u200b\u5219\u200b\u53ea\u4f1a\u200b\u5339\u914d\u200b\u6210\u529f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b</p>","tags":["R"]},{"location":"ship/ship/","title":"\u6211\u200b\u548c\u200b\u5934\u200b\u9a6c","text":""},{"location":"tags/","title":"\u5206\u7c7b","text":""},{"location":"tags/#r","title":"R","text":"<ul> <li>R\u200b\u5b9e\u6218\u200b\uff1a\u200b\u6587\u4ef6\u200b\u8fc7\u6ee4\u200b</li> </ul>"},{"location":"tags/#powershell","title":"powershell","text":"<ul> <li>Powershell_\u200b\u57fa\u7840\u200b</li> <li>Powershell_\u200b\u6587\u4ef6\u200b\u5904\u7406\u200b</li> </ul>"},{"location":"tags/#_1","title":"\u4e2a\u4eba\u200b\u5efa\u200b\u7ad9","text":"<ul> <li>\u200b\u4f7f\u7528\u200bmkdocs\u200b\u6784\u5efa\u200b\u535a\u5ba2\u200b\u548c\u200b\u4e2a\u4eba\u200b\u7ad9\u70b9\u200b</li> </ul>"}]}